/// Дополнительные параметры
class OneFileLasDataSectionLine {
  /// Мнемоника параметра
  /// либо имя кривой
  String mnem;

  /// Единицы измерения
  String units;

  /// Занчение параметра
  /// либо API кривой
  String value;

  /// Описание
  String desc;
}

/// `~V` - contains version and wrap mode information
/// - `~Version Information Section`
/// - Этот раздел является обязательным и обычно появляется в самом начале
/// файла.
/// - Он определяет, какая версия формата LAS используется и используется ли
/// режим переноса.
class OneFileLasDataSectionV {
  /// Версия файла
  /// - `1` - `VERS. 1.2: CWLS LOG ASCII STANDARD - VERSION 1.2`
  /// http://www.cwls.org/wp-content/uploads/2014/09/LAS12_Standards.txt
  /// - `2` - `VERS. 2.0 : CWLS log ASCII Standard - VERSION 2.0`
  /// http://www.cwls.org/wp-content/uploads/2017/02/Las2_Update_Feb2017.pdf
  /// - `3` - `3.0`
  /// http://www.cwls.org/wp-content/uploads/2014/09/LAS_3_File_Structure.pdf
  int version;

  /// - `true` - `WRAP. YES: Multiple lines per depth step`
  /// - `false` - `WRAP. NO:  One line per depth step`
  /// - [1.2]
  /// Указывает, использовался ли в разделе данных режим циклического переноса.
  /// Если режим переноса не используется, строка будет иметь максимальную длину
  /// 256 символов (включая возврат каретки и перевод строки). Если используется
  /// режим переноса, значение глубины будет в отдельной строке, и все строки
  /// данных не будут длиннее 80 символов (включая возврат каретки и перевод
  /// строки).
  /// - [2.0]
  /// Указывает, использовался ли в разделе данных режим циклического переноса.
  /// Если режим переноса `NO`, длина строки не ограничена. Если используется
  /// режим переноса, значение глубины будет в отдельной строке, и все строки
  /// данных не будут длиннее 80 символов (включая возврат каретки и перевод
  /// строки).
  bool wrap;

  /// Дополнительные линии
  List<OneFileLasDataSectionLine> /*?*/ extLines;
}

/// `~W` - contains well identification
/// - `~Well Information Section`
/// - Этот раздел является обязательным.
/// - Он идентифицирует скважину, его местоположение и указывает начальную и
/// конечную глубину файла.
class OneFileLasDataSectionW {
  /// `STRT.M nnn.nn: START DEPTH`
  /// - [1.2]
  /// Относится к первой глубине файла. `nnn.nn` относится к значению глубины.
  /// Количество десятичных знаков не ограничено. `.M` указывает метры и может
  /// быть заменен при использовании других единиц. Начальная глубина может быть
  /// больше или меньше глубины остановки.
  /// - [2.0]
  /// Относится к первой глубине (или времени, или порядковому номеру) в файле.
  /// `nnn.nn` относится к значению глубины (или времени, или индекса). Значение
  /// должно быть идентично по значению первой глубине (время, индекс) в разделе
  /// `~ASCII`, хотя его формат может меняться
  /// (`123,45` эквивалентно `123,45000`).
  /// Количество десятичных знаков не ограничено. Если индекс - глубина, единицы
  /// измерения должны быть `M` (метры), `F` (футы) или `FT` (футы). Единицы
  /// должны совпадать в строках, относящихся к `STRT`, `STOP`, `STEP` и
  /// индексному (первому) каналу в разделе `~C`. Если время или индекс,
  /// единицами измерения могут быть любые единицы, которые приводят к
  /// представлению времени или номера индекса в виде числа с плавающей запятой.
  /// (форматы `дд/мм/гг` или `чч:мм:сс` не поддерживаются). Логическая глубина,
  /// время или порядок индекса могут увеличиваться или уменьшаться. Значение
  /// начальной глубины (или времени, или индекса) при делении на значение
  /// глубины шага (или времени, или индекса) должно быть целым числом.
  double strt;

  /// `STOP.M nnn.nn: STOP DEPTH`
  /// - [1.2]
  /// Относится к последней глубине файла. `nnn.nn` относится к значению глубины.
  /// Количество десятичных знаков не ограничено. `.M` указывает метры и может
  /// быть заменен при использовании других единиц. Начальная глубина может быть
  /// больше или меньше глубины остановки.
  /// - [2.0]
  /// Те же комментарии, что и для `STRT`, за исключением того, что это значение
  /// представляет ПОСЛЕДНЮЮ строку данных в разделе данных журнала `~ASCII`.
  /// Значение глубины остановки (или времени, или индекса) при делении на
  /// значение глубины шага (или времени, или индекса) должно быть целым числом.
  double stop;

  /// `STEP.M nnn.nn: STEP`
  ///  - [1.2]
  /// Относится к используемому приращению глубины. Знак минус должен
  /// предшествовать значению шага, если начальная глубина больше, чем глубина
  /// остановки. Нулевое значение шага указывает на переменный шаг.
  /// - [2.0] Те же комментарии, что и для `STRT`, за исключением того, что это
  /// значение представляет фактическую разницу между всеми последовательными
  /// значениями глубины, времени или индекса в разделе данных журнала `~ASCII`.
  /// Знак (`+` или `-`) представляет логическую разницу между каждым
  /// последующим значением индекса. (+ для увеличения значений индекса).
  /// Шаг должен быть идентичным по значению между всеми значениями индекса во
  /// всем файле. Если приращение шага не совсем согласовано между каждой
  /// выборкой глубины, времени или индекса, тогда шаг должен иметь значение 0.
  double step;

  /// `NULL. -nnn.nn:`
  ///  - [1.2]
  /// Относится к нулевым значениям. Обычно используются два типа `-9999` и
  /// `-999,25`.
  /// - [2.0] -  `-9999.25`
  double undef;

  /// `COMP`
  /// Наименование компании заказчика
  String /*?*/ company;

  /// `WELL`
  /// Номер скважины
  String well;

  /// `FLD`
  /// Месторождение
  String /*?*/ field;

  /// `LOC`
  /// Локация
  String /*?*/ location;

  /// `PROV`
  /// Относится к провинции. Для регионов за пределами Канады эту строку можно
  /// заменить на:
  /// - `CNTY` - округ
  /// - `STAT` - штат
  /// - `CTRY` - страна
  String /*?*/ province;

  /// `SRVC`
  /// Сервисная компания, которая проводила исследования
  String /*?*/ serviceCompany;

  /// `DATE`
  /// Дата исследования
  /// - [2.0]
  /// Предпочтительная дата имеет формат `гггг-мм-дд`.
  String /*?*/ date;

  /// `UWI`
  /// `API`
  /// Уникальнай идентификатор скважины
  String /*?*/ uniqueWellId;

  /// Дополнительные линии
  List<OneFileLasDataSectionLine> /*?*/ extLines;
}

/// Данные LAS файла
class OneFileLasData {
  /// `~V` - contains version and wrap mode information
  /// - Этот раздел является обязательным и обычно появляется в самом начале
  /// файла.
  /// - Он определяет, какая версия формата LAS используется и используется ли
  /// режим переноса.
  OneFileLasDataSectionV v;

  /// `~W` - contains well identification
  /// - Этот раздел является обязательным.
  /// - Он идентифицирует скважину, его местоположение и указывает начальную и
  /// конечную глубину файла.
  OneFileLasDataSectionW w;

  /// `~C` - contains curve information
  /// - `~Curve Information Section`
  /// - Этот раздел является обязательным.
  /// - Он описывает кривую и ее единицы в том порядке, в котором они появляются
  /// в разделе данных файла.
  /// - Используемые мнемоники не ограничены, но должны быть определены в строке,
  /// в которой они появляются.
  /// - API коды не обязательны. (См. Ссылки.)
  /// - Кривые, описанные в этом разделе, должны присутствовать в наборе данных.
  /// - [1.2]
  /// - Первая описываемая кривая обычно должна быть глубиной.
  /// - [2.0]
  /// Первый описанный канал является индексом всех остальных каналов и должен
  /// иметь глубину, время или индекс. Единственные допустимые мнемоники для
  /// индексного канала - `DEPT`, `DEPTH`, `TIME` или `INDEX`.
  List<OneFileLasDataSectionLine> c;

  /// `~P` - contains parameters or constants
  /// - `~Parameter Information Section`
  /// - Этот раздел не является обязательным. Он определяет значения различных
  /// параметров, относящихся к этой скважине.
  /// - Используемые мнемоники не ограничены, но должны быть определены в строке,
  /// в которой они появляются.
  /// - Нет ограничения на количество строк, которые можно использовать.
  List<OneFileLasDataSectionLine> /*?*/ p;

  /// `~O` - contains other information such as comments
  /// `~Other Information Section`
  /// - Этот раздел не является обязательным. Его предполагаемое использование - как раздел примечаний или комментариев.
  List<String> /*?*/ o;

  /// `~A` - contains ASCII log data
  /// - Раздел данных всегда будет последним разделом в файле.
  /// - Глубина всегда должна отображаться в первом столбце
  /// - Каждый столбец данных должен быть разделен хотя бы одним пробелом.
  /// - Строка длиной менее 256 символов (включая возврат каретки и перевод
  /// строки) обычно не переносится. Режим переноса будет использоваться, если
  /// длина данных превышает 256 символов.
  /// - В режиме переноса глубина будет на отдельной строке.
  /// - В режиме переноса длина строки данных не должна превышать 80 символов.
  /// Это включает возврат каретки и перевод строки.
  /// - Если используется режим переноса, десятичные точки должны быть выровнены
  /// для облегчения чтения.
  /// - Экспоненты не допускаются. Раздел кривой можно использовать для
  /// преодоления этого ограничения путем изменения единиц измерения.
  /// Раздел данных всегда будет последним разделом в файле.
  /// - [2.0] Встраиваемые пустые строки в любом месте раздела запрещены.
  /// - [2.0] Каждый столбец данных должен быть разделен хотя бы одним пробелом.
  /// Многие читатели LAS ожидают единообразия формата в каждой строке, хотя и
  /// не требуется. Настоятельно рекомендуется правильное выравнивание каждого
  /// столбца данных и одинаковая ширина всех полей данных.
  /// - [2.0] Длина строки в разделе данных распакованных файлов больше не
  /// ограничена.
  List<double> a;
}
